stages:
  - build
  - test
  - docs

before_script:
  - mkdir -p --mode=0777 artifacts artifacts/docs artifacts/htmlcov

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-ci
  CONTAINER_IMAGE_DEV: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

build:
  stage: build
  image: docker/compose:latest
  services:
    - docker:dind
  script:
    - cd docker
    - docker-compose build wildland-client-base
    - docker-compose build --parallel wildland-client wildland-client-ci
    - docker tag wildland-client-ci $CONTAINER_TEST_IMAGE
    - docker tag wildland-client $CONTAINER_IMAGE_DEV
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CONTAINER_TEST_IMAGE
    - docker push $CONTAINER_IMAGE_DEV

pytest:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - export PYTEST_ADDOPTS="--color=yes"
    - ./ci/ci-pytest -k test_pseudomanifest_edit
  after_script:
    - /home/user/env/bin/python3 -m coverage combine
    - /home/user/env/bin/python3 -m coverage xml -o artifacts/coverage.xml
    - /home/user/env/bin/python3 -m coverage html -d artifacts/htmlcov
    - /home/user/env/bin/python3 -m coverage report --include=wildland/* --omit=wildland/storage_backends/transpose.py
    - sed -i -e '/<source><\/source>/d' artifacts/coverage.xml
  coverage: '/TOTAL.*\s(\d+)%/'
  artifacts:
    when: always
    paths:
      - artifacts/htmlcov/
      - artifacts/sync-daemon.log
    reports:
      junit: artifacts/wildland.xml
      cobertura: artifacts/coverage.xml
